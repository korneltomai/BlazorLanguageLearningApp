@using System.ComponentModel.DataAnnotations

@inject FolderService FolderService
@inject SetService SetService
@inject NavigationManager Navigation
@inject IStringLocalizer<Pages.Set> Loc

<Modal @ref="modal" Title="@Loc["DeleteSet"]" IsVerticallyCentered="true">
    <BodyTemplate>
        <div class="container mb-3">
            @if (@SetService.CurrentSet!.Cards.Count > 0)
            {
                @String.Format($"{Loc["DeleteSetText"]}", @SetService.CurrentSet!.Name, @SetService.CurrentSet!.Cards.Count)
            }
            else
            {
                @String.Format($"{Loc["DeleteEmptySetText"]}", @SetService.CurrentSet!.Name)
            }
        </div>
        <div class="row">
            <div class="col-md-12 text-right">
                <Button Type="ButtonType.Button" Color="ButtonColor.Danger" Class="float-end me-2" @onclick="DeleteSet">@Loc["Delete"]</Button>
                <Button Type="ButtonType.Button" Color="ButtonColor.Secondary" Class="float-end me-2" @onclick="OnHideModalClick">@Loc["Close"]</Button>
            </div>
        </div>
    </BodyTemplate>
</Modal>

<Button Type="ButtonType.Button" Color="ButtonColor.Danger" Class="w-100" @onclick="OnShowModalClick">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16">
        <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5m-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5M4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06m6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528M8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5" />
    </svg>
    @Loc["Delete"]
</Button>

@code {
    [Parameter]
    public required string Username { get; set; }

    private Modal modal;

    private async void DeleteSet()
    {
        await SetService.DeleteSet(SetService.CurrentSet!.Id);

        await modal?.HideAsync();

        Navigation.NavigateTo($"{Username}/sets/{FolderService.CurrentFolder!.Id}");
    }

    private async Task OnShowModalClick()
    {
        await modal?.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal?.HideAsync();
    }
}