@using CsvHelper
@using System.Globalization
@using BlazorLanguageLearningApp.Client.Helpers;
@using CsvHelper.Configuration

@inject IStringLocalizer<Pages.Set> Loc

<Modal @ref="importFromCsvModal" Title="@Loc["UploadCsvFile"]" IsVerticallyCentered="true" OnHidden="OnImportFromCsvModalHidden">
    <BodyTemplate>
        <div class="container mb-3">
            <InputFile OnChange="LoadExampleFileContent" accept=".csv" @key=@(inputFileId) />
            <div>
                <h4 class="mt-3">@Loc["TopFiveRowsFromFile"]:</h4>
                <p class="border px-2">
                    @foreach (string line in csvFileContent)
                    {
                        @line<br/>
                    }
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-right">
                <Button Color="ButtonColor.Secondary" @onclick="() => importFromCsvModal.HideAsync()">@Loc["Close"]</Button>
                <Button Color="ButtonColor.Primary">@Loc["UploadFile"]</Button>
            </div>
        </div>
    </BodyTemplate>
</Modal>

<div class="dropdown">
    <button class="btn btn-primary dropdown-toggle d-block w-100" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-bar-up" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 10a.5.5 0 0 0 .5-.5V3.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 3.707V9.5a.5.5 0 0 0 .5.5m-7 2.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13a.5.5 0 0 1-.5-.5" />
        </svg>
        @Loc["ImportCards"]
    </button>
    <ul class="dropdown-menu">
        <li>
            <Button Type="ButtonType.Button" Class="dropdown-item" @onclick="() => importFromCsvModal.ShowAsync()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-arrow-up" viewBox="0 0 16 16">
                    <path d="M8.5 11.5a.5.5 0 0 1-1 0V7.707L6.354 8.854a.5.5 0 1 1-.708-.708l2-2a.5.5 0 0 1 .708 0l2 2a.5.5 0 0 1-.708.708L8.5 7.707z" />
                    <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z" />
                </svg>
                @Loc["FromCsvFile"]
            </Button>
        </li>
        <li>
            <Button Type="ButtonType.Button" Class="dropdown-item" @onclick="() => importFromCsvModal.ShowAsync()">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z" />
                </svg>
                @Loc["FromAnotherSet"]
            </Button>
        </li>
    </ul>
</div>

@code {
    private Modal importFromCsvModal = default!;

    private Guid inputFileId = Guid.NewGuid();
    private string[] csvFileContent = new string[5];

    protected override void OnInitialized()
    {
        csvFileContent[0] = "No file is selected.";
        base.OnInitialized();
    }

    private void OnImportFromCsvModalHidden()
    {
        csvFileContent = new string[5];
        csvFileContent[0] = "No file is selected.";
        inputFileId = Guid.NewGuid();
    }

    private async void LoadExampleFileContent(InputFileChangeEventArgs e)
    {
        using (var reader = new StreamReader(e.File.OpenReadStream()))
        {
            csvFileContent = new string[5];

            string? line = await reader.ReadLineAsync();
            if (line is null)
            {
                csvFileContent[0] = "The selected file is empty.";
                return;
            }
            csvFileContent[0] = line;

            int linesLeft = 4;
            while ((line = await reader.ReadLineAsync()) != null && linesLeft > 0)
            {
                csvFileContent[5 - linesLeft] = line;
                linesLeft--;
            }
        }

        StateHasChanged();
    }
}
