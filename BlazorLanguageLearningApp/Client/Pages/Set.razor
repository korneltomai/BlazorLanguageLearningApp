@page "/sets/{folderId:int}/{setId:int}"

@using BlazorLanguageLearningApp.Client.Components

@inject FolderService FolderService
@inject SetService SetService
@inject CardService CardService
@inject NavigationManager Navigation
@inject IStringLocalizer<Set> Localization

@if (CurrentSet == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <PageTitle>CurrentSet.Name</PageTitle>

    <div class="row d-lg-flex m-0 p-0">
        <SetsSubNav FolderId="@FolderId" SetId="@SetId" />

        <div class="content d-flex flex-column col-lg-9 col-xl-10 px-0">
            <div class="container-fluid mt-2">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb mb-2">
                        <li class="breadcrumb-item"><a href="sets">@Localization["Sets"]</a></li>
                        <li class="breadcrumb-item"><a href="sets/@FolderService.CurrentFolder!.Id">@FolderService.CurrentFolder!.Name</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@CurrentSet.Name</li>
                    </ol>
                </nav>
                <div class="row">
                    <div class="col-12 col-sm-9 col-xxl-10">
                        <div class="d-flex align-items-center">
                            <h1 class="fs-3 mb-0">@CurrentSet.Name</h1>
                            <span class="text-secondary ms-3 me-auto"><small>@CurrentSet.Visibility</small></span>
                        </div>
                        <div class="mb-2">
                            <small class="text-secondary">@CurrentSet.TermsLanguage - @CurrentSet.DefinitionsLanguage</small>
                        </div>
                        <div class="mb-3 mb-sm-0 me-sm-4 pe-2">
                            @CurrentSet.Description
                        </div>
                    </div>
                    <div class="d-flex align-items-center col-12 col-sm-3 col-xxl-2 ps-sm-0">
                        <div class="d-flex d-sm-block w-100 p-0 m-0">
                            <div class="col-6 col-sm-12 pe-2 pe-sm-0">
                                <SetModal Editing="true"/>
                            </div>
                            <div class="col-6 col-sm-12 mt-sm-1 ps-2 ps-sm-0">
                                <DeleteSetModal />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="container-fluid mb-3">
                <div class="d-flex align-items-center flex-wrap">
                    <div class="col-12 col-md-auto mb-2 mb-md-0 me-0 me-md-2">
                        <CardModal />
                    </div>
                    <div class="me-auto col-12 col-md-auto mb-2 mb-md-0">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle d-block w-100" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-arrow-bar-up" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M8 10a.5.5 0 0 0 .5-.5V3.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 3.707V9.5a.5.5 0 0 0 .5.5m-7 2.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 0 1h-13a.5.5 0 0 1-.5-.5" />
                                </svg>
                                @Localization["ImportCards"]
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#">@Localization["FromGoogleSheets"]</a></li>
                                <li><a class="dropdown-item" href="#">@Localization["FromAnotherSet"]</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-12 col-md-auto">
                        <div class="form-floating">
                            <InputSelect class="form-select bg-primary text-light" id="orderBySelect" aria-label="Order sets by" @bind-Value:get="Ordering"@bind-Value:set="OrderSets">
                                <option value="@CardOrdering.TermIncreasing">@Localization["TermIncreasing"]</option>
                                <option value="@CardOrdering.TermDecreasing">@Localization["TermDecreasing"]</option>
                                <option value="@CardOrdering.DefinitionIncreasing">@Localization["DefinitionIncreasing"]</option>
                                <option value="@CardOrdering.DefinitionDecreasing">@Localization["DefinitionDecreasing"]</option>
                                <option value="@CardOrdering.ScoreIncreasing">@Localization["ScoreIncreasing"]</option>
                                <option value="@CardOrdering.ScoreDecreasing">@Localization["ScoreDecreasing"]</option>
                            </InputSelect>
                            <label class="text-light" for="orderBySelect"><small>@Localization["OrderBy"]</small></label>
                        </div>
                    </div>
                </div>
                <div class="d-flex flex-row-reverse w-100">
                    <span class="fs-5 mt-2 mb-0">@String.Format($"{Localization["CardsInSet"]}", @CurrentSet.Cards.Count())</span>
                </div>
            </div>
            <div class="cardContainer container-fluid">
                <div class="d-flex flex-column py-3">
                    @foreach (BlazorLanguageLearningApp.Shared.Card card in CurrentSet.Cards)
                    {
                        <CardModal Editing="true" Id="@card.Id">
                            <div class="d-flex row border border-black rounded-3 mx-0">
                                <div class="row g-0 col-10 col-md-11 me-auto">
                                    <div class="col-12 col-md-6 p-3 pe-0 pe-md-3 pb-0 pb-md-3">
                                        <div class="border border-black rounded-3 py-3">
                                            <div class="d-flex justify-content-center">
                                                <span class="h4 mb-0">@card.Term</span>
                                            </div>
                                            <div class="d-flex justify-content-center">
                                                <small class="text-secondary">@card.TermLanguage</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-6 p-3 pe-0 ps-md-0">
                                        <div class="border border-black rounded-3 py-3">
                                            <div class="d-flex justify-content-center">
                                                <span class="h4 mb-0">@card.Definition</span>
                                            </div>
                                            <div class="d-flex justify-content-center">
                                                <small class="text-secondary">@card.DefinitionLanguage</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex flex-row-reverse col-2 col-md-1 p-0">
                                    <div class="learntPercantage d-flex justify-content-center align-items-center bg-primary rounded-circle border border-primary m-2">
                                        @card.LearntPercantage
                                    </div>
                                </div>
                            </div>
                        </CardModal>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public int FolderId { get; set; }

    [Parameter]
    public int SetId { get; set; }

    public BlazorLanguageLearningApp.Shared.Set? CurrentSet { get; set; }
    private CardOrdering Ordering { get; set; }

    protected override void OnInitialized()
    {
        SetService.OnChange.Add(StateHasChanged);
        CardService.OnChange.Add(StateHasChanged);
    }

    protected override void OnParametersSet()
    {
        CurrentSet = SetService.GetSet(FolderId, SetId);

        if (CurrentSet == null)
            Navigation.NavigateTo($"/sets/{FolderId}");

        OrderSets(CardOrdering.TermIncreasing);
    }

    private void OrderSets(CardOrdering selectedOrdering)
    {
        Ordering = selectedOrdering;

        if (selectedOrdering == CardOrdering.TermIncreasing)
            CurrentSet!.Cards = CurrentSet.Cards.OrderBy(s => s.Term).ToList();
        else if (selectedOrdering == CardOrdering.TermDecreasing)
            CurrentSet!.Cards = CurrentSet.Cards.OrderByDescending(s => s.Term).ToList();
        else if (selectedOrdering == CardOrdering.DefinitionIncreasing)
            CurrentSet!.Cards = CurrentSet.Cards.OrderBy(s => s.Definition).ToList();
        else if (selectedOrdering == CardOrdering.DefinitionDecreasing)
            CurrentSet!.Cards = CurrentSet.Cards.OrderByDescending(s => s.Definition).ToList();
        else if (selectedOrdering == CardOrdering.ScoreIncreasing)
            CurrentSet!.Cards = CurrentSet.Cards.OrderBy(s => s.LearntPercantage).ToList();
        else if (selectedOrdering == CardOrdering.ScoreDecreasing)
            CurrentSet!.Cards = CurrentSet.Cards.OrderByDescending(s => s.LearntPercantage).ToList();
    }
}
